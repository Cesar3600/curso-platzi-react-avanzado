
15 useCategoriesData

modificaremos el archivo index.js de listOfCategories

quitaremos el calssName = {fixed ? 'fixed' : ''}
y lo reemplazaremos por una props
fixed = {fixed}
////////////////////////////////////////////////////////////////////////////

listOfCategories/index.js
--------------------- -------------------------------------------------------
  const renderList = (fixed) => {
    return (
      <Lista fixed={fixed}>
        {
          categories.map(category => <Item key={category.id}><Category {...category} /></Item>)
        }
      </Lista>
    )
  }

////////////////////////////////////////////////////////////////////////////



en listofCategories/styled.js

importaremos {css} de styled-components
y dentro de Lista agregar la props a travez de ${}:
${props => props.fixed && css` ... aqui el estilo css ... `}

usamos una funcion con un parametro props
si si el props fixed existe entonces ejecuta la css:

import Styled, { css } from 'styled-components'
import { fadeIn } from '../styles/animation'
export const Lista = Styled.ul`
  display: flex;
  overflow:scroll;
  width: 100%;
  ${props => props.fixed && css`
    background: #fff;
    border-radius: 60px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    left: 0;
    margin: 0 auto;
    max-width: 400px;
    padding: 5px;
    position: fixed;
    right: 0;
    top: -20px;
    transform: scale(.5);
    z-index: 1;
    ${fadeIn({ time: '1s', blurIni: '5px' })}
  `}
`



