
CREANDO ANIMACIONES CON KEYFRAMES

crear efect utilizando keyframes de styled-components
////////////////////////////////////////////////////////////////////////////
styles.js 

importar keyframes 
instanciar keyframes a constante fadeInKeyFrames
agregar animation en ImgWrapper
efecto ease 
opacity: opacity: o y blur:5px
---------------------------------------------------------------------------

import Styled, { keyframes } from 'styled-components'

const fadeInKeyFrames = keyframes`
    from{
        opacity: 0;
        filter:blur(10px)
    }
    to{
        opacity: 1;
        filter: blur(0px)
    }
`

export const ImgWrapper = Styled.div`
    animation: ease ${fadeInKeyFrames} 1s;
    border-radius: 10px;
    display: block;
    padding: 56.25% 0 0 0;
    height: 0;
    overflow:hidden;
    width:100%;
    position: relative;
`
export const Img = Styled.img`
    box-shadow: 0 10px 14px rgba(0,0,0,.2);
    height: 100%;
    object-fit:cover;
    position:absolute;
    top:0;
    width:100%;
`
export const Button = Styled.button`
    padding-top: 8px;
    display:flex;
    align-items: center;
    & svg{
        margin-left: 4px;
    }
`

////////////////////////////////////////////////////////////////////////////

TRANSFORMANDO LA ANIMACION A UNA FUNCION REUTILIZABLE


import Styled,{keyframes,css} from 'styled-components'
import { fadeIn } from '../../components/styles/animation'


const keyFrameEffect = keyframes`
    from{
        filter:blur(33px);
        opacity: 0
    }
    to{
        filter: blur(0px);
        opacity:1;
    }
`

export const fadeIn = ({ time = '1s', type = 'ease' } = {}) =>
  css`animation: ${time} ${keyFrameEffect} ${type};`

export const ImgWrapper = Styled.div`
    ${fadeIn({type='linear'})}
    border-radius: 10px;
    display: block;
    padding: 56.25% 0 0 0;
    height: 0;
    overflow:hidden;
    width:100%;
    position: relative;
`
export const Img = Styled.img`
    box-shadow: 0 10px 14px rgba(0,0,0,.2);
    height: 100%;
    object-fit:cover;
    position:absolute;
    top:0;
    width:100%;
`
export const Button = Styled.button`
    padding-top: 8px;
    display:flex;
    align-items: center;
    & svg{
        margin-left: 4px;
    }
`




////////////////////////////////////////////////////////////////////////////

SE PUEDE HACER AUN MAS REUTILIZABLE SEPARANDOLA A OTRO ARCHIVO

creamos la carpeta styles dentro de la carpeta components:

components/styles/animation.js
------------------------------------------------------------------------------


import { keyframes, css } from 'styled-components'

const keyFrameEffect = keyframes`
    from{
        filter:blur(33px);
        opacity: 0
    }
    to{
        filter: blur(0px);
        opacity:1;
    }
`

export const fadeIn = ({ time = '1s', type = 'ease' } = {}) =>
  css`animation: ${time} ${keyFrameEffect} ${type};`


////////////////////////////////////////////////////////////////////////////
tambien pegamos el archivo globalStyle.js dentro de la carpeta style.
hacemos el cambio respectivo en App.js





////////////////////////////////////////////////////////////////////////////
En PhotoCard/index.js

importamos fadeIn y lo utilizamos dentro de Img
----------------------------------------------------------------------------

import Styled from 'styled-components'
import { fadeIn } from '../../components/styles/animation'

export const ImgWrapper = Styled.div`
    border-radius: 10px;
    display: block;
    padding: 56.25% 0 0 0;
    height: 0;
    overflow:hidden;
    width:100%;
    position: relative;
`
export const Img = Styled.img`
    ${fadeIn()}
    box-shadow: 0 10px 14px rgba(0,0,0,.2);
    height: 100%;
    object-fit:cover;
    position:absolute;
    top:0;
    width:100%;
`
export const Button = Styled.button`
    padding-top: 8px;
    display:flex;
    align-items: center;
    & svg{
        margin-left: 4px;
    }
`


////////////////////////////////////////////////////////////////////////////





















